generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_DEV_URL")
}

model account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  user              user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Account_userId_fkey")

  @@id([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model categories {
  id          Int    @id @default(autoincrement())
  name        String
  slug        String
  description String
  post        post[]
}

model post {
  id         Int          @id @default(autoincrement())
  content    String       @db.LongText
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  title      String
  published  Boolean      @default(false)
  author     user         @relation(fields: [authorId], references: [id])
  authorId   Int
  categories categories[]
}

model user {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique(map: "User_email_key")
  emailVerified DateTime?
  image         String?
  role          user_role @default(user)
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
  account       account[]
  post          post[]
}

model verificationtoken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

enum user_role {
  user
  admin
}
